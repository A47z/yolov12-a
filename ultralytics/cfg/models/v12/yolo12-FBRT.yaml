# YOLOv12 ðŸš€, AGPL-3.0 license
# YOLOv12 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect
# CFG file for FBRT-yolo (Corrected)

# Parameters
nc: 10 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov12n.yaml' will call yolov12.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv12 backbone (Corrected for P5 /32 scale)
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]        # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]       # 1-P2/4
  - [-1, 1, FCM_3, [128]]            # 2 (scale /4)
  - [-1, 1, Down, [256]]             # 3-P3/8 (Backbone P3 output)
  - [-1, 1, FCM_2, [256]]            # 4 (scale /8)
  - [-1, 1, Down, [512]]             # 5-P4/16 (Backbone P4 output)
  - [-1, 1, FCM_1, [512]]            # 6 (scale /16)
  - [-1, 1, Down, [512]]             # 7 (New Down layer to get to /32 scale for P5)
  - [-1, 1, Pzconv,[512]]            # 8 (was 7, now takes from new layer 7, scale /32)
  - [-1, 1, FCM, [512]]              # 9 (was 8, now takes from 8, scale /32)
  - [-1, 1, SPPF, [512, 5]]          # 10 (was 9, now takes from 9, Backbone P5 output, scale /32)

# YOLOv12 head (Re-indexed and connections verified)
head:
  # Path for P4 features (merging P5_backbone and P4_backbone)
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]   # 11 (Upsamples P5_backbone from new layer 10 [/32] -> output is /16)
  - [[-1, 5], 1, Concat, [1]]                   # 12 (Concat layer 11 [/16] with backbone_P4 from layer 5 [/16])
  - [-1, 2, A2C2f, [512, False, -1]]                         # 13 (P4' features, /16 scale)

  # Path for P3 features (merging P4' and P3_backbone)
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]   # 14 (Upsamples P4' from layer 13 [/16] -> output is /8)
  - [[-1, 3], 1, Concat, [1]]                   # 15 (Concat layer 14 [/8] with backbone_P3 from layer 3 [/8])
  - [-1, 2, A2C2f, [256, False, -1]]                         # 16 (P3_detect_features, /8 scale) -> This is the first input to Detect

  # Path for P4_detect_features (downsampling P3_detect_features and merging with P4')
  - [-1, 1, Down, [256]]                        # 17 (Downsamples P3_detect_features from layer 16 [/8] -> output is /16)
  - [[-1, 13], 1, Concat, [1]]                  # 18 (Concat layer 17 [/16] with P4' from layer 13 [/16])
  - [-1, 2, A2C2f, [512, False, -1]]                         # 19 (P4_detect_features, /16 scale) -> This is the second input to Detect

  # Path for P5_detect_features (downsampling P4_detect_features and merging with P5_backbone)
  - [-1, 1, Down, [512]]                        # 20 (Downsamples P4_detect_features from layer 19 [/16] -> output is /32)
  - [[-1, 10], 1, Concat, [1]]                  # 21 (Concat layer 20 [/32] with P5_backbone from layer 10 [/32])
  - [-1, 2, C3k2, [1024, True]]                         # 22 (P5_detect_features, /32 scale) -> This is the third input to Detect

  - [[16, 19, 22], 1, Detect, [nc]]             # Detect(P3, P4, P5)